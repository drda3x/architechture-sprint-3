@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include DEVICONS/java.puml
!include FONTAWESOME/users.puml

title Container diagram
top to bottom direction

Person(user, "Users", $sprite="users")
Person(sensor, "Sensor", $sprite=robot)

Container(web_app, "WebApp")
Container(api_gw, "API Gateway", "Балансировка. Авторизация, аутентификация")

System_Boundary(smhv2, "SmartHome.V2") {
    Container(kafka, "Kafka")
    Container(device_manager, "Управление устройствами", "Отправка команд устройствам, получение обратной связи")
	Container(user_manager, "Работа с пользователями", "Добавление новых устройств. Редактирование устройств")
}

ContainerDb(user_manager_db, "PostgreSQL", "Пользователи\nУстройства")
ContainerDb(redis, "Redis", "Текущее состояние устройств\nЦелевое состояние устройств")

BiRel(user, web_app, 'Добавление/редактирование устройств. Управляющие команды')
BiRel(web_app, api_gw, 'Добавление/редактирование устройств. Управляющие команды')

BiRel_D(api_gw, kafka, 'Добавление/редактирование устройств. Управляющие команды')
BiRel_L(kafka, device_manager, 'Команда принята/отклонена')
BiRel_R(kafka, user_manager, 'Добавление/удаление пользователей\nДобавление/удаление устройств')

Rel_D(user_manager, user_manager_db, '')
Rel_U(device_manager, sensor, 'Отправка команд; Получение текущих значений')
Rel_D(device_manager, redis, '')

@enduml
